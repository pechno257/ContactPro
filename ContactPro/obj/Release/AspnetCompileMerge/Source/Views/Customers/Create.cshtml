@using System.Web.UI.WebControls
@model ContactPro.Models.Customer

@{
    ViewBag.Title = "Add Customer";
}

<br />

@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
<div class="form-horizontal">
    <div class="row">
        <div class="col-md-12 off-set-md-0 col-lg-10 offset-lg-1">
            <h4>@ViewBag.Title</h4>
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="row">
        <div class="col-md-5 offset-lg-1">
            <div class="form-group">
                <div class="row">
                    <div class="col-lg-3 col-md-4">
                        @Html.LabelFor(model => model.CompanyName, htmlAttributes: new { @class = "control-label required-field" })
                    </div>
                    <div class="col-lg-9 col-md-8">
                        @Html.EditorFor(model => model.CompanyName, new { htmlAttributes = new { @class = "form-control form-control-sm", PlaceHolder = "ABC Company", autofocus = "autofocus" } })
                        @Html.ValidationMessageFor(model => model.CompanyName, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>

            <div class="form-group">
                <div class="row">
                    <div class="col-lg-3 col-md-4">
                        @Html.LabelFor(model => model.XceleratorURL, htmlAttributes: new { @class = "control-label" })
                    </div>
                    <div class="col-lg-9 col-md-8">
                        @Html.EditorFor(model => model.XceleratorURL, new { htmlAttributes = new { @class = "form-control form-control-sm", PlaceHolder = "https://www.domain.com" } })
                        @Html.ValidationMessageFor(model => model.XceleratorURL, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
        </div>

        <div class="col-md-5 offset-md-2 offset-lg-0">
            <div class="form-group">
                <div class="row">
                    <div class="col-lg-3 col-md-4">
                        @Html.LabelFor(model => model.Phone, htmlAttributes: new { @class = "control-label required-field" })
                    </div>
                    <div class="col-lg-9 col-md-8">
                        @Html.EditorFor(model => model.Phone, new { htmlAttributes = new { @class = "form-control form-control-sm", PlaceHolder = "555-555-5555" } })
                        @Html.ValidationMessageFor(model => model.Phone, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>

            <div class="form-group">
                <div class="row">
                    <div class="col-lg-3 col-md-4">
                        @Html.LabelFor(model => model.Fax, htmlAttributes: new { @class = "control-label" })
                    </div>
                    <div class="col-lg-9 col-md-8">
                        @Html.EditorFor(model => model.Fax, new { htmlAttributes = new { @class = "form-control form-control-sm", PlaceHolder = "555-555-5555" } })
                        @Html.ValidationMessageFor(model => model.Fax, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class="row">
        <div class="col-md-12 off-set-md-0 col-lg-10 offset-lg-1">
            <hr />
        </div>
    </div>

    <div class="row">
        <div class="col-md-5 offset-lg-1">
            <div class="form-group">
                <div class="row">
                    <div class="col-lg-3 col-md-4">
                        @Html.LabelFor(model => model.Street, htmlAttributes: new { @class = "control-label" })
                    </div>
                    <div class="col-lg-9 col-md-8">
                        @Html.EditorFor(model => model.Street, new { htmlAttributes = new { @class = "form-control form-control-sm", PlaceHolder = "123 Main St" } })
                        @Html.ValidationMessageFor(model => model.Street, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>

            <div class="form-group">
                <div class="row">
                    <div class="col-lg-3 col-md-4">
                        @Html.LabelFor(model => model.City, htmlAttributes: new { @class = "control-label" })
                    </div>
                    <div class="col-lg-9 col-md-8">
                        @Html.EditorFor(model => model.City, new { htmlAttributes = new { @class = "form-control form-control-sm", PlaceHolder = "New York" } })
                        @Html.ValidationMessageFor(model => model.City, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>

            <div class="form-group">
                <div class="row">
                    <div class="col-lg-3 col-md-4">
                        @Html.LabelFor(model => model.State, htmlAttributes: new { @class = "control-label" })
                    </div>
                    <div class="col-lg-9 col-md-8">
                        @Html.DropDownListFor(model => model.State, ContactPro.Utils.StateList.GetStateList(), "", new { @class = "form-control form-control-sm" })
                        @Html.ValidationMessageFor(model => model.State, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>

            <div class="form-group">
                <div class="row">
                    <div class="col-lg-3 col-md-4">
                        @Html.LabelFor(model => model.Zip, htmlAttributes: new { @class = "control-label" })
                    </div>
                    <div class="col-lg-9 col-md-8">
                        @Html.EditorFor(model => model.Zip, new { htmlAttributes = new { @class = "form-control form-control-sm", PlaceHolder = "90237 or 93023-7474 or A2Z 7G8" } })
                        @Html.ValidationMessageFor(model => model.Zip, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>

            <div class="form-group">
                <div class="row">
                    <div class="col-lg-3 col-md-4">
                        @Html.LabelFor(model => model.Country, htmlAttributes: new { @class = "control-label required-field" })
                    </div>
                    <div class="col-lg-9 col-md-8">
                        @Html.DropDownListFor(model => model.Country, ContactPro.Utils.CountryList.GetCountryList(), "", new { @class = "form-control form-control-sm" })
                        @Html.ValidationMessageFor(model => model.Country, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
        </div>

        <div class="col-md-5 offset-md-2 offset-lg-0">
            <div class="form-group">
                <div class="row">
                    <div class="col-lg-3 col-md-4">
                        @Html.LabelFor(model => model.MailStreet, htmlAttributes: new { @class = "control-label" })
                    </div>
                    <div class="col-lg-9 col-md-8">
                        @Html.EditorFor(model => model.MailStreet, new { htmlAttributes = new { @class = "form-control form-control-sm", PlaceHolder = "123 Main St" } })
                        @Html.ValidationMessageFor(model => model.MailStreet, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>

            <div class="form-group">
                <div class="row">
                    <div class="col-lg-3 col-md-4">
                        @Html.LabelFor(model => model.MailCity, htmlAttributes: new { @class = "control-label" })
                    </div>
                    <div class="col-lg-9 col-md-8">
                        @Html.EditorFor(model => model.MailCity, new { htmlAttributes = new { @class = "form-control form-control-sm", PlaceHolder = "New York" } })
                        @Html.ValidationMessageFor(model => model.MailCity, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>

            <div class="form-group">
                <div class="row">
                    <div class="col-lg-3 col-md-4">
                        @Html.LabelFor(model => model.MailState, htmlAttributes: new { @class = "control-label" })
                    </div>
                    <div class="col-lg-9 col-md-8">
                        @Html.DropDownListFor(model => model.MailState, ContactPro.Utils.StateList.GetStateList(), "", new { @class = "form-control form-control-sm" })
                        @Html.ValidationMessageFor(model => model.MailState, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>

            <div class="form-group">
                <div class="row">
                    <div class="col-lg-3 col-md-4">
                        @Html.LabelFor(model => model.MailZip, htmlAttributes: new { @class = "control-label" })
                    </div>
                    <div class="col-lg-9 col-md-8">
                        @Html.EditorFor(model => model.MailZip, new { htmlAttributes = new { @class = "form-control form-control-sm", PlaceHolder = "90237 or 93023-7474 or A2Z 7G8" } })
                        @Html.ValidationMessageFor(model => model.MailZip, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>

            <div class="form-group">
                <div class="row">
                    <div class="col-lg-3 col-md-4">
                        @Html.LabelFor(model => model.MailCountry, htmlAttributes: new { @class = "control-label" })
                    </div>
                    <div class="col-lg-9 col-md-8">
                        @Html.DropDownListFor(model => model.MailCountry, ContactPro.Utils.CountryList.GetCountryList(), "", new { @class = "form-control form-control-sm" })
                        @Html.ValidationMessageFor(model => model.MailCountry, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-4 offset-md-4 text-center">
            <input type="submit" value="Save" class="btn btn-success btn-sm btn-60" /><span class="margin-left-20">@Html.ActionLink("Cancel", "Index", null, new { @class = "btn btn-secondary btn-sm btn-60" })</span>
        </div>
    </div>
</div>
}


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
